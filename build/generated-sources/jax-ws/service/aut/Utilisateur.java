
package service.aut;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Utilisateur", targetNamespace = "http://aut.service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Utilisateur {


    /**
     * 
     * @param mdp
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sInscrire", targetNamespace = "http://aut.service/", className = "service.aut.SInscrire")
    @ResponseWrapper(localName = "sInscrireResponse", targetNamespace = "http://aut.service/", className = "service.aut.SInscrireResponse")
    @Action(input = "http://aut.service/Utilisateur/sInscrireRequest", output = "http://aut.service/Utilisateur/sInscrireResponse")
    public String sInscrire(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "mdp", targetNamespace = "")
        String mdp);

    /**
     * 
     * @return
     *     returns java.util.List<service.aut.Utilisateur_Type>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listerUtilisateurs", targetNamespace = "http://aut.service/", className = "service.aut.ListerUtilisateurs")
    @ResponseWrapper(localName = "listerUtilisateursResponse", targetNamespace = "http://aut.service/", className = "service.aut.ListerUtilisateursResponse")
    @Action(input = "http://aut.service/Utilisateur/listerUtilisateursRequest", output = "http://aut.service/Utilisateur/listerUtilisateursResponse")
    public List<Utilisateur_Type> listerUtilisateurs();

    /**
     * 
     * @param mdp
     * @param username
     * @return
     *     returns service.aut.Utilisateur_Type
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "seConnecter", targetNamespace = "http://aut.service/", className = "service.aut.SeConnecter")
    @ResponseWrapper(localName = "seConnecterResponse", targetNamespace = "http://aut.service/", className = "service.aut.SeConnecterResponse")
    @Action(input = "http://aut.service/Utilisateur/seConnecterRequest", output = "http://aut.service/Utilisateur/seConnecterResponse")
    public Utilisateur_Type seConnecter(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "mdp", targetNamespace = "")
        String mdp);

    /**
     * 
     * @param username
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listerRoles", targetNamespace = "http://aut.service/", className = "service.aut.ListerRoles")
    @ResponseWrapper(localName = "listerRolesResponse", targetNamespace = "http://aut.service/", className = "service.aut.ListerRolesResponse")
    @Action(input = "http://aut.service/Utilisateur/listerRolesRequest", output = "http://aut.service/Utilisateur/listerRolesResponse")
    public List<Object> listerRoles(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://aut.service/", className = "service.aut.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://aut.service/", className = "service.aut.HelloResponse")
    @Action(input = "http://aut.service/Utilisateur/helloRequest", output = "http://aut.service/Utilisateur/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
